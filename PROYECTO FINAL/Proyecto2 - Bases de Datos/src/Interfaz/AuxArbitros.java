/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import ClaseAux.Mensaje;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Jeanca
 */
public class AuxArbitros extends javax.swing.JFrame {

    /**
     * Creates new form AuxArbitros
     */
    public AuxArbitros() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        agregar_arbitro = new javax.swing.JButton();
        eliminar_arbitro = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        agregar_tarjeta = new javax.swing.JButton();
        eliminar_tarjeta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel1.setText("Agregar o Eliminar Cuerpo Arbitral de un Partido");

        agregar_arbitro.setText("Agregar Árbitro");
        agregar_arbitro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_arbitroActionPerformed(evt);
            }
        });

        eliminar_arbitro.setText("Eliminar Árbitro");
        eliminar_arbitro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_arbitroActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel2.setText("Agregar o Eliminar Tarjetas Amarillas/Rojas y Penales");

        agregar_tarjeta.setText("Agregar Tarjeta");
        agregar_tarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_tarjetaActionPerformed(evt);
            }
        });

        eliminar_tarjeta.setText("Eliminar Tarjeta");
        eliminar_tarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_tarjetaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(54, 54, 54))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(agregar_arbitro)
                        .addGap(64, 64, 64)
                        .addComponent(eliminar_arbitro))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(agregar_tarjeta)
                        .addGap(65, 65, 65)
                        .addComponent(eliminar_tarjeta)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar_arbitro)
                    .addComponent(eliminar_arbitro))
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar_tarjeta)
                    .addComponent(eliminar_tarjeta))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // AGREGA ARBITRO
    private void agregar_arbitroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_arbitroActionPerformed
        // TODO add your handling code here:
        try {
            JTextField entradaNumPartido = new JTextField();
            JTextField entradaNumPasaporte = new JTextField();
            JTextField entradaRol = new JTextField();
            Object[] mensaje = { "Código de partido: ", entradaNumPartido,
                    "Pasaporte Árbitro: ", entradaNumPasaporte,
                    "Rol: ", entradaRol };
            int opcion = JOptionPane.showConfirmDialog(null, mensaje, "Llene la siguiente información: ", JOptionPane.OK_CANCEL_OPTION);
            if (opcion == JOptionPane.OK_OPTION) {
                String numPartido = entradaNumPartido.getText();
                String pasaporte = entradaNumPasaporte.getText();
                String rol = entradaRol.getText();
                if (numPartido.equals("") || pasaporte.equals("") || rol.equals("")) {
                    Mensaje.entradaVacia();
                } else {
                    Conexion.Conexion.realizarConsulta("" +
                        "INSERT INTO arbitros_por_partido VALUES (" +
                        "" + numPartido +
                        "," + pasaporte +
                        ",'" + rol + "')");
                    ClaseAux.Mensaje.mensajeCrearCRUD();
                }
            }    
        } catch (SQLException | ClassNotFoundException ex) {
            ClaseAux.Mensaje.mensajeError(ex.toString());
        }
    }//GEN-LAST:event_agregar_arbitroActionPerformed

    // ELIMINA ARBITRO
    private void eliminar_arbitroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar_arbitroActionPerformed
        // TODO add your handling code here:
        try {
            JTextField entradaPasaporte = new JTextField();
            Object[] mensaje = { "Pasaporte Árbitro: ", entradaPasaporte };
            int opcion = JOptionPane.showConfirmDialog(null, mensaje, "Llene la siguiente información: ", JOptionPane.OK_CANCEL_OPTION);
            if (opcion == JOptionPane.OK_OPTION) {
                String pasaporte = entradaPasaporte.getText();
                if (pasaporte.equals("")) {
                    Mensaje.entradaVacia();
                } else {
                    Conexion.Conexion.realizarConsulta("" +
                        "DELETE FROM arbitros_por_partido WHERE numero_pasaporte_arbitro = " + pasaporte);
                    ClaseAux.Mensaje.mensajeBorrarCRUD();

                }
            }
        } catch (SQLException | ClassNotFoundException ex) {
            ClaseAux.Mensaje.mensajeError(ex.toString());
        }
    }//GEN-LAST:event_eliminar_arbitroActionPerformed

    // AGREGA UNA TARJETA
    private void agregar_tarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_tarjetaActionPerformed
        // TODO add your handling code here:
        try {
            JTextField entradaNumPartido = new JTextField();
            JTextField entradaNumPasaporte = new JTextField();
            JTextField entradaMinTarjeta = new JTextField();
            JTextField entradaTipoTarjeta = new JTextField();
            Object[] mensaje = { "Código de partido: ", entradaNumPartido,
                    "Pasaporte Jugador: ", entradaNumPasaporte,
                    "Rol: ", entradaMinTarjeta,
                    "Tipo Tarjeta: ", entradaTipoTarjeta };
            int opcion = JOptionPane.showConfirmDialog(null, mensaje, "Llene la siguiente información: ", JOptionPane.OK_CANCEL_OPTION);
            if (opcion == JOptionPane.OK_OPTION) {
                String numPartido = entradaNumPartido.getText();
                String pasaporte = entradaNumPasaporte.getText();
                String minTarjeta = entradaMinTarjeta.getText();
                String tipoTarjeta = entradaTipoTarjeta.getText();
                if (numPartido.equals("") || pasaporte.equals("") || minTarjeta.equals("")) {
                    Mensaje.entradaVacia();
                } else {
                    Conexion.Conexion.realizarConsulta("" +
                        "INSERT INTO tarjetas_por_partido VALUES (" +
                        "" + numPartido +
                        "," + pasaporte +
                        "," + minTarjeta + 
                        ",'" + tipoTarjeta + "')");
                    ClaseAux.Mensaje.mensajeCrearCRUD();
                }
            }    
        } catch (SQLException | ClassNotFoundException ex) {
            ClaseAux.Mensaje.mensajeError(ex.toString());
        }
    }//GEN-LAST:event_agregar_tarjetaActionPerformed

    // BORRA UNA TARJETA
    private void eliminar_tarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar_tarjetaActionPerformed
        // TODO add your handling code here:
        try {
            JTextField entradaPasaporte = new JTextField();
            Object[] mensaje = { "Pasaporte Jugador: ", entradaPasaporte };
            int opcion = JOptionPane.showConfirmDialog(null, mensaje, "Llene la siguiente información: ", JOptionPane.OK_CANCEL_OPTION);
            if (opcion == JOptionPane.OK_OPTION) {
                String pasaporte = entradaPasaporte.getText();
                if (pasaporte.equals("")) {
                    Mensaje.entradaVacia();
                } else {
                    Conexion.Conexion.realizarConsulta("" +
                        "DELETE FROM tarjetas_por_partido WHERE numero_pasaporte_arbitro = " + pasaporte);
                    ClaseAux.Mensaje.mensajeBorrarCRUD();

                }
            }
        } catch (SQLException | ClassNotFoundException ex) {
            ClaseAux.Mensaje.mensajeError(ex.toString());
        }
    }//GEN-LAST:event_eliminar_tarjetaActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AuxArbitros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AuxArbitros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AuxArbitros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AuxArbitros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AuxArbitros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar_arbitro;
    private javax.swing.JButton agregar_tarjeta;
    private javax.swing.JButton eliminar_arbitro;
    private javax.swing.JButton eliminar_tarjeta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
